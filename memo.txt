そもそもNode.jsって何？
サーバーまで作れる
サーバとは？
Webアプリケーションの見えている部分（クライアント）
→裏の見えていない部分の仕組み

JavaScriptでかく

◎車の例
クライアントは見た目の部分
サーバはアクセルやブレーキなどの制御する仕組みの部分

Node.jsとは
環境、設計手法

npmインストール後
node -vでバージョン確認できる
→同時にnpmm使えるように
node package manager

◎-gとは
グローバルにインストールしますよというもの。
PC上でどこでもそのパッケージを使えますよというもの。

◎APIって何？
例）レストラン
客（クライアント）　メニューをみて決めて注文（URLを叩く）
ウェイター（API）　厨房へ注文を伝える　客に渡されたものを渡す
厨房（サーバ　データの格納場所）　注文を作ってウェイターに渡す
→Node.jsはサーバに相当するが、その中にAPIの機能を組み込むイメージ（分離しているわけではない）

APIとは、クライアントとサーバをつなげる役割
→Application　Programing　Interface

◎
npm initで初期化すると、pacage.jsonが作成される。
ライブラリはpackage.jsonで管理される
mainで決めたエントリーポイントの名前（今回はindex.js）が一番最初のファイルになる

node ファイル名でファイルを実行できる（javac ファイル名みたいな感じ？）

scriptsの中にdevを書くと、npm run devとコマンドを打つことで、””の内容を走らせることができる
・nodemonとは
ファイルを保存するたびにリロードしてくれるモジュール（読み込みをしてくれる）
→index.jsが動く

・expressとは
公式ドキュメントを見ればわかる

requireはimportと同じ意味

3000や８０００のポートはよく使われるが、バッティングするとコンフリクトする

・postmanの役割
postは投稿する
CRUDを使うことができるソフトウェア
->ブラウザでも使えるが、ローカルサーバの場合は使えない